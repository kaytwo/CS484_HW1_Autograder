#!/usr/bin/env bash

# START: Sets correct directories based on local dev machine vs Gradescope production
if [ -f "/autograder/harness.py" ]; then
    echo "[GS] Running on Gradescope container, using Gradescope vars"
    DIR="/autograder/source"
    OUTPUT_DIR="/autograder/results"
    STUDENT_SUBMISSION_DIR="/autograder/submission"
else
    echo "[GS] Running on local dev machine, using ./localautograder/ "
    DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
    OUTPUT_DIR="$DIR/localautograder/results"
    echo "num args $#"
    if [ "$#" -lt 1 ]; then
      STUDENT_SUBMISSION_DIR="$DIR/localautograder/submission"
    else
      STUDENT_SUBMISSION_DIR="$1"
    fi
fi
PYTHON_JSON_TOOL="$DIR/tools/json_generator.py"
JEST_JSON_TOOL="$DIR/tools/jest_to_gradescope.py"

# END: Sets correct directories based on local dev machine vs Gradescope production


###########################################################################################
#
#   Prepare student files for submission:
#       - Unzip all zip files, search for /src/main/, and move to staging/src/main/
#       - Print elegant error if src not found showing all files that were found
#
###########################################################################################
cd $STUDENT_SUBMISSION_DIR

# Clean out __MACOSX directories and hidden files
find . -name "__MACOSX" -exec rm -rf {} \;

# Remove old results.json files
rm -r "$OUTPUT_DIR"/*.json


"$DIR"/run_main_tests

# Compile json results
echo "[GS] Compiling results**.json files to results.json"
python3 $PYTHON_JSON_TOOL -c $OUTPUT_DIR